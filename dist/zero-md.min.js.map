{"version":3,"file":"zero-md.min.js","sources":["../src/utils/IDfy.js","../src/index.js"],"sourcesContent":["const notAUnicodeWord =\n  /[^_0-9a-zA-Z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]+/g\n\nexport default function IDfy(\n  name,\n  options = { lowerCase: true, replace: { its: notAUnicodeWord, with: '-' } },\n) {\n  return options.lowerCase\n    ? name.toLowerCase().replace(options.replace.its, options.replace.with)\n    : name.replace(options.replace.its, options.replace.with)\n}\n","import IDfy from './utils/IDfy'\n\nconst htmlTemplate = {\n  /**\n   * @param {{\n   *   code: string | undefined,\n   *   customName: string | undefined,\n   *   content: string,\n   *   isPoetry: boolean | undefined,\n   * }} details\n   * @returns {string}\n   */\n  codeBlock: ({ code, customName, content, isPoetry }) =>\n    `<pre><code${isPoetry ? ' poetry' : ''}${\n      code ? ` class=\"${isPoetry ? 'code' : 'language'}-${code}\"` : ''\n    }${customName ? ` data-customName=\"${customName}\"` : ''}>${content}</code></pre>`,\n}\n\nexport class ZeroMd extends HTMLElement {\n  get src() {\n    return this.getAttribute('src')\n  }\n\n  get path() {\n    return this.getAttribute('path')\n  }\n\n  get lang() {\n    return (\n      new URLSearchParams(window.location.search).get('lang') ||\n      this.getAttribute('lang') ||\n      this.config.lang\n    )\n  }\n\n  get code() {\n    return (\n      new URLSearchParams(window.location.search).get('code') ||\n      this.getAttribute('code') ||\n      this.config.code\n    )\n  }\n\n  get debug() {\n    return (\n      new URLSearchParams(window.location.search).get('debug') ||\n      this.getAttribute('debug') ||\n      this.config?.debug\n    )\n  }\n\n  get showDrafts() {\n    return (\n      new URLSearchParams(window.location.search).get('showDrafts') ||\n      this.getAttribute('showDrafts') ||\n      this.config?.showDrafts\n    )\n  }\n\n  set src(val) {\n    this.reflect('src', val)\n  }\n\n  set path(val) {\n    this.reflect('path', val)\n  }\n\n  set lang(val) {\n    this.reflect('lang', val)\n  }\n\n  set code(val) {\n    this.reflect('code', val)\n  }\n\n  get manualRender() {\n    return this.hasAttribute('manual-render')\n  }\n\n  set manualRender(val) {\n    this.reflect('manual-render', val)\n  }\n\n  reflect(name, val) {\n    if (val === false) {\n      this.removeAttribute(name)\n    } else {\n      this.setAttribute(name, val === true ? '' : val)\n    }\n  }\n\n  static get observedAttributes() {\n    return ['src', 'path', 'lang', 'code']\n  }\n\n  attributeChangedCallback(name, old, val) {\n    if (\n      (name === 'src' || name === 'path' || name === 'lang' || name === 'code') &&\n      this.connected &&\n      !this.manualRender &&\n      val !== old\n    ) {\n      this.render()\n    }\n  }\n\n  constructor(defaults) {\n    super()\n    this.version = '$VERSION'\n    this.config = {\n      markedUrl: 'https://cdn.jsdelivr.net/gh/markedjs/marked@2/marked.min.js',\n      prismUrl: [\n        ['https://cdn.jsdelivr.net/gh/PrismJS/prism@1/prism.min.js', 'data-manual'],\n        'https://cdn.jsdelivr.net/gh/PrismJS/prism@1/plugins/autoloader/prism-autoloader.min.js',\n      ],\n      cssUrls: [\n        'https://cdn.jsdelivr.net/gh/sindresorhus/github-markdown-css@4/github-markdown.min.css',\n        'https://cdn.jsdelivr.net/gh/PrismJS/prism@1/themes/prism.min.css',\n        'https://cdn.jsdelivr.net/gh/automician/buttons-menu-custom-element@98902f0ad3f21fa6a2f3e0d1aa75b6f478557936/build/static/css/main.e5d0f3d9.css',\n      ],\n      hostCss:\n        ':host{display:block;position:relative;contain:content;}:host([hidden]){display:none;}' +\n        `\n        .markdown-body a {\n          color: #00b7ce !important;\n        }\n        \n        .codeGroup {\n          width: auto;\n          margin: auto;\n          background-color: #F7F7F7;\n          border-radius: 10px;\n          box-shadow: 0px 5px 15px rgba(0, 0, 0, .1);\n        }\n        \n        button {\n          letter-spacing: 0.75px;\n          border: none;\n          padding: 10px;\n          # background-color: #bccbe9;\n          background-color: rgba(27,31,35,.05);\n          # color: #8e9ead;\n          color: #778796;\n          font-size: 12px;\n          font-weight: 200;\n          cursor: pointer;\n          transition: 0.5s;\n        }\n        \n        button:hover {\n          #background-color: #d5e3ff;\n          background-color: rgba(0,183,206,0.1);\n        }\n        \n        button.active {\n          background-color: rgba(27,31,35,.05);\n          border-bottom: rgb(0,183,206) 1px solid;\n        }\n        \n        .active {\n          background-color: white;\n        }\n        \n        .tab-content,.inline-content {\n          display: none;\n        }\n        \n        .tab-content.active {\n          display: block;\n        }\n        \n        .inline-content.active {\n          display: inline;\n        }\n        \n        code, pre {\n          color: #3d3d3d  !important;\n          background:0 0 !important;\n          text-shadow:0 1px #fff !important;\n          font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace !important;\n          font-size:1em   !important;\n          text-align:left !important;\n          white-space:pre !important;\n          word-spacing:normal !important;\n          word-break:normal !important;\n          word-wrap:normal !important;\n          line-height:25px !important;\n          -moz-tab-size:4 !important;\n          -o-tab-size:4 !important;\n          tab-size:4 !important;\n          -webkit-hyphens:none !important;\n          -moz-hyphens:none !important;\n          -ms-hyphens:none !important;\n          hyphens:none !important;\n        }\n        code b, pre b {\n          font-weight: 800 !important;\n          font-size: 1.1em !important;\n          color:#000 !important;\n        }\n        code em, pre em, span[style*=\"text-decoration:underline\"] {\n          font-size: 1.1em !important;\n        }\n        pre{\n          padding:1em !important;\n          margin:0 0 1em 0 !important;\n          overflow:auto !important;\n        }\n        :not(pre)>code,pre{\n          background:#F7F7F7 !important;\n        }\n        `,\n      baseUrl: '',\n      gitlab: {\n        token: null,\n        projectId: null,\n        path: null,\n        branch: 'master',\n        ...window.ZeroMdConfig.gitlab,\n      },\n      disableCodeHighlightingFor: [],\n      shortBreaksNumber: 2,\n      longBreaksNumber: 20,\n      anchorIdsToLowerCase: true,\n      indentInsideTocByPixels: 40,\n      imgBaseOld: './resources',\n      imgBaseNew: 'https://github.com/yashaka/taotaspy-resources/raw/master',\n      lang: null,\n      code: null,\n      groupCodeGroups: true,\n      pTagLang: undefined, // expect string with something like \"en-us\", \"ru\", etc...\n      ...defaults,\n      ...window.ZeroMdConfig,\n    }\n    this.cache = {}\n    this.root = this.hasAttribute('no-shadow') ? this : this.attachShadow({ mode: 'open' })\n    if (!this.constructor.ready) {\n      this.constructor.ready = Promise.all([\n        !!window.marked || this.loadScript(this.config.markedUrl),\n        !!window.Prism || this.loadScript(this.config.prismUrl),\n      ])\n    }\n    this.clicked = this.clicked.bind(this)\n    if (!this.manualRender) {\n      // Scroll to hash id after first render. However, `history.scrollRestoration` inteferes with this\n      // on refresh. It's much better to use a `setTimeout` rather than to alter the browser's behaviour.\n      this.render().then(() => setTimeout(() => this.goto(location.hash), 250))\n    }\n    this.observer = new MutationObserver(async () => {\n      this.observeChanges()\n      if (!this.manualRender) {\n        await this.render()\n      }\n    })\n    this.observeChanges()\n  }\n\n  connectedCallback() {\n    this.connected = true\n    this.fire('zero-md-connected', {}, { bubbles: false, composed: false })\n    this.waitForReady().then(() => {\n      this.fire('zero-md-ready')\n    })\n    if (this.shadowRoot) {\n      this.shadowRoot.addEventListener('click', this.clicked)\n    }\n  }\n\n  disconnectedCallback() {\n    this.connected = false\n    if (this.shadowRoot) {\n      this.shadowRoot.removeEventListener('click', this.clicked)\n    }\n  }\n\n  waitForReady() {\n    const ready =\n      this.connected ||\n      new Promise(resolve => {\n        this.addEventListener('zero-md-connected', function handler() {\n          this.removeEventListener('zero-md-connected', handler)\n          resolve()\n        })\n      })\n    return Promise.all([this.constructor.ready, ready])\n  }\n\n  // TODO: ensure this implementation is valid\n  waitForRendered() {\n    const rendered = new Promise(resolve => {\n      this.addEventListener('zero-md-rendered', function handler() {\n        this.removeEventListener('zero-md-rendered', handler)\n        resolve()\n      })\n    })\n    return Promise.all([this.constructor.ready, rendered])\n  }\n\n  fire(name, detail = {}, opts = { bubbles: true, composed: true }) {\n    if (detail.msg) {\n      console.warn(detail.msg)\n    }\n    this.dispatchEvent(\n      new CustomEvent(name, {\n        detail: { node: this, ...detail },\n        ...opts,\n      }),\n    )\n  }\n\n  tick() {\n    return new Promise(resolve => requestAnimationFrame(resolve))\n  }\n\n  // Coerce anything into an array\n  arrify(any) {\n    return any ? (Array.isArray(any) ? any : [any]) : []\n  }\n\n  // Promisify an element's onload callback\n  onload(node) {\n    return new Promise((resolve, reject) => {\n      node.onload = resolve\n      node.onerror = err => reject(err.path ? err.path[0] : err.composedPath()[0])\n    })\n  }\n\n  // Load a url or load (in order) an array of urls via <script> tags\n  loadScript(urls) {\n    return Promise.all(\n      this.arrify(urls).map(item => {\n        const [url, ...attrs] = this.arrify(item)\n        const el = document.createElement('script')\n        el.src = url\n        el.async = false\n        attrs.forEach(attr => el.setAttribute(attr, ''))\n        return this.onload(document.head.appendChild(el))\n      }),\n    )\n  }\n\n  // Scroll to selected element\n  goto(id) {\n    if (id) {\n      const el = this.root.getElementById(id.substring(1))\n      if (el) {\n        el.scrollIntoView()\n      }\n    }\n  }\n\n  // Hijack same-doc anchor hash links\n  clicked(ev) {\n    if (ev.metaKey || ev.ctrlKey || ev.altKey || ev.shiftKey || ev.defaultPrevented) {\n      return\n    }\n    const a = ev.target.closest('a')\n    if (a && a.hash && a.host === location.host && a.pathname === location.pathname) {\n      this.goto(a.hash)\n    }\n  }\n\n  dedent(str) {\n    str = str.replace(/^\\n/, '')\n    const match = str.match(/^\\s+/)\n    return match ? str.replace(new RegExp(`^${match[0]}`, 'gm'), '') : str\n  }\n\n  getBaseUrl(src) {\n    const a = document.createElement('a')\n    a.href = src\n    return a.href.substring(0, a.href.lastIndexOf('/') + 1)\n  }\n\n  // Runs Prism highlight async; falls back to sync if Web Workers throw\n  highlight(container) {\n    return new Promise(resolve => {\n      /** commented as temporal workaround of \"prisma breaks poetry html highlighting in all browsers except FF\" */\n      // const unhinted = container.querySelectorAll('pre>code:not([class*=\"language-\"])')\n      /*\n       * Prism doesn't auto-detect languages, and original zero-md version was doing this by itself\n       * but actually we don't need this magic, it nevertheless was not smart enough:)\n       * and it conflicted with current poetry implementation\n       * that lefts intentationally poetry without .language-xxxx hint\n      unhinted.forEach((n) => {\n        // Dead simple language detection :)\n        const lang = n.innerText.match(/^\\s*</)\n          ? 'markup'\n          : n.innerText.match(/^\\s*(\\$|#)/)\n          ? 'bash'\n          : 'js'\n        n.classList.add(`language-${lang}`)\n      })\n      * yet in have consistent css for all code blocks let's add language-text to all of not-hinted ones \n      * also currently we need to add it here, not in place of poetry definition\n      * because there the parsing logic depends on \"not having langauge-xxxx hint for poetries\"...\n      */\n      // unhinted.forEach(block => block.classList.add('language-text'))\n\n      this.debug &&\n        console.log(\n          '\\n===highlighting...\\n' +\n            document.querySelector('zero-md').shadowRoot.querySelector('.markdown-body').innerHTML,\n        )\n\n      try {\n        window.Prism.highlightAllUnder(container, true, resolve())\n\n        this.debug &&\n          console.log(\n            '\\n===highlighted:\\n' +\n              document.querySelector('zero-md').shadowRoot.querySelector('.markdown-body')\n                .innerHTML,\n          )\n      } catch {\n        window.Prism.highlightAllUnder(container)\n        resolve()\n\n        this.debug &&\n          console.log(\n            '\\n===highlighted:\\n' +\n              document.querySelector('zero-md').shadowRoot.querySelector('.markdown-body')\n                .innerHTML,\n          )\n      }\n    })\n  }\n\n  // Converts HTML string into node\n  makeNode(html) {\n    const tpl = document.createElement('template')\n    tpl.innerHTML = html\n    return tpl.content.firstElementChild\n  }\n\n  // Construct styles dom and return HTML string\n  buildStyles() {\n    const get = query => {\n      const node = this.querySelector(query)\n      return node ? node.innerHTML || ' ' : ''\n    }\n    const urls = this.arrify(this.config.cssUrls)\n    const html = `<div class=\"markdown-styles\"><style>${this.config.hostCss}</style>${get(\n      'template[data-merge=\"prepend\"]',\n    )}${\n      get('template:not([data-merge])') ||\n      urls.reduce((a, c) => `${a}<link rel=\"stylesheet\" href=\"${c}\">`, '')\n    }${get('template[data-merge=\"append\"]')}</div>`\n    return html\n  }\n\n  // Construct md nodes and return HTML string\n  async buildMd(opts = {}) {\n    const renderer = new window.marked.Renderer()\n    let isOriginalUnderscoredBoldDisabledByNonDefaultPoetryBoldOption = undefined\n    let tocLinks = []\n\n    /* DEFINE HOW TO GET MD */\n\n    const fetchDataFromGitlab = async fileUrl => {\n      const id = this.config.gitlab.projectId\n      const branch = this.config.gitlab.branch\n      const absolutePath = encodeURIComponent(fileUrl.trim())\n      gitlabAbsoluteUrl = `https://gitlab.com/api/v4/projects/${id}/repository/files/${absolutePath}/raw?ref=${branch}`\n\n      return fetch(gitlabAbsoluteUrl, {\n        headers: {\n          'PRIVATE-TOKEN': this.config.gitlab.token,\n        },\n      })\n    }\n\n    let isReadingFromGitlabConfigured = this.config.gitlab !== {}\n    let gitlabAbsoluteUrl = ''\n    const src = async () => {\n      if (!this.src && !this.path) {\n        return ''\n      }\n      const responce =\n        isReadingFromGitlabConfigured && this.path\n          ? await fetchDataFromGitlab(this.path)\n          : await (async () => {\n              const url = this.src.trim()\n              gitlabAbsoluteUrl = url.startsWith('http') ? url : this.config.baseUrl + url\n\n              return fetch(gitlabAbsoluteUrl)\n            })()\n\n      if (responce.ok) {\n        return await responce.text()\n      } else {\n        this.fire('zero-md-error', {\n          msg: `[zero-md] HTTP error ${responce.status} while fetching src`,\n          status: responce.status,\n          src: this.src,\n          path: this.path,\n          lang: this.lang,\n          code: this.code,\n        })\n        return ''\n      }\n    }\n    const script = () => {\n      const el = this.querySelector('script[type=\"text/markdown\"]')\n      if (!el) {\n        return ''\n      }\n      const md = el.hasAttribute('data-dedent') ? this.dedent(el.text) : el.text\n      return md\n    }\n\n    let md = (await src()) || script()\n\n    /* PROCESS MD */\n\n    const importRegex = /<!--import\\(([\\s\\S]*?)\\)-->/gim\n    const importsMatch = [...md.matchAll(importRegex)]\n\n    if (process.env.ENVIRONMENT === 'dev') {\n      if (importsMatch.length) {\n        await Promise.all(\n          importsMatch.map(async ([match, importURL]) => {\n            const response = await fetch(importURL)\n\n            if (response.ok) {\n              const importedContent = await response.text()\n              md = md.replace(match, importedContent)\n            }\n          }),\n        )\n      }\n    } else {\n      if (importsMatch.length) {\n        await Promise.all(\n          importsMatch.map(async ([match, importURL]) => {\n            const currentZeroMdPath =\n              isReadingFromGitlabConfigured && this.path ? this.path : this.src\n            const currentZeroMdFileNestingDepth = currentZeroMdPath.split('/').length - 1\n\n            let response\n            const isUrlRelative = !importURL.startsWith('http')\n            if (isUrlRelative) {\n              const importedFileNestingMatch = importURL.match(/\\.{1,2}(?=[^/]*\\/)/gim)\n\n              if (\n                (importedFileNestingMatch &&\n                  importedFileNestingMatch.length === 1 &&\n                  importedFileNestingMatch[0] === '.') ||\n                importedFileNestingMatch === null\n              ) {\n                const thisPathLastElement = this.path.split('/').pop()\n                const filePathtoReplace = importedFileNestingMatch\n                  ? importURL.split('./')[1]\n                  : importURL.split('./')[0]\n\n                importURL = this.path.replace(thisPathLastElement, filePathtoReplace)\n              }\n\n              if (\n                importedFileNestingMatch &&\n                !(importedFileNestingMatch.length === 1 && importedFileNestingMatch[0] === '.')\n              ) {\n                const importedFileNestingDepth = importedFileNestingMatch.filter(\n                  item => item === '..',\n                ).length\n\n                if (importedFileNestingDepth <= currentZeroMdFileNestingDepth) {\n                  const importURLPurePath = importURL.replace(/^(\\.\\/|\\.\\.\\/)*/, '')\n                  const importedFileFolderIndex =\n                    currentZeroMdFileNestingDepth - importedFileNestingDepth\n                  importURL = currentZeroMdPath\n                    .split('/')\n                    .slice(0, importedFileFolderIndex)\n                    .concat(importURLPurePath)\n                    .join('/')\n                } else {\n                  console.error('Provided relative path to the file does not exist')\n                  return\n                }\n              }\n\n              response = await fetchDataFromGitlab(importURL)\n            } else {\n              response = await fetch(importURL)\n            }\n\n            if (response.ok) {\n              const importedContent = await response.text()\n              md = md.replace(match, importedContent)\n            }\n          }),\n        )\n      }\n    }\n\n    const showDraftsOption = /<!---+showDrafts-+-->/i\n    if (showDraftsOption.test(md)) {\n      this.setAttribute('showDrafts', 'true')\n    }\n    const draftTags = /<draft>|<\\/draft>/gm\n    const draftedText = /<draft>(.|\\n)*?<\\/draft>/gm\n    md = this.showDrafts === 'true' ? md.replace(draftTags, '') : md.replace(draftedText, '')\n\n    const codalizedOption = new RegExp(\n      '<codalized(?: main=\"(js|ts|py|java|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)\")?\\\\/>' +\n        '|' +\n        '<!--codalized(?:\\\\s)*?\\\\(main=\"(js|ts|py|java|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)\"\\\\)-->',\n      'gim',\n    )\n    const [shouldBeCodalized, $1, $2] = [...md.matchAll(codalizedOption)].at(-1) || []\n    const defaultCodeFromMd = $1 || $2\n    this.debug && console.log('===shouldBeCodalized===\\n' + shouldBeCodalized)\n    this.debug && console.log('===defaultCodeFromMd===\\n' + defaultCodeFromMd)\n\n    const localizedOption =\n      /(?:<localized(?: main=\"(uk|ru|en)\")?\\/>)|(?:<!--localized(?:\\s)*?\\(main=\"(uk|ru|en)\"\\)-->)/gim\n    const [shouldBeLocalized, $group1, $group2] = [...md.matchAll(localizedOption)].at(-1) || []\n    const defaultLangFromMd = $group1 || $group2\n\n    this.debug && console.log('===translation===\\n')\n    const translation = /<!--((?![-\\s])\\W)(.*?)\\1([\\s\\S]*?)\\1-->/gm\n    const translate = ([_match, _delimiter, from, to]) => {\n      try {\n        md = md.replace(new RegExp('(?<!<!--\\\\W)' + from, 'gm'), to)\n      } catch (e) {\n        this.debug && console.log('===match\\n' + _match)\n        this.debug && console.log('===delimiter\\n' + _delimiter)\n        this.debug && console.log('===from\\n' + from)\n        this.debug && console.log('===to\\n' + to)\n        console.error(e)\n      }\n    }\n    ;[...md.matchAll(translation)].forEach(translate)\n    this.debug && console.log('===md after first general translation\\n' + md)\n    // next duplicated line is a crazy hack...\n    // to allow nested translations to work... (at least one-level-nested)\n    // TODO: refactor it for proper implementation\n    ;[...md.matchAll(translation)].forEach(translate)\n    this.debug && console.log('=================\\n')\n    this.debug && console.log('===md after general translations\\n' + md)\n\n    const translationPerCodeOption =\n      /<!--(?:-*)((?:js|ts|java|py|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)(?:-(?:js|ts|java|py|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml))*)((?![-])\\W)(.*?)\\2([\\s\\S]*?)\\2-->/gm\n    ;[...md.matchAll(translationPerCodeOption)].forEach(([_, perCode, __, from, to]) => {\n      if (perCode.split('-').length > 1) {\n        perCode = perCode.split('-')\n      }\n\n      if (\n        perCode instanceof Array\n          ? perCode.includes(this.code || defaultCodeFromMd)\n          : (this.code || defaultCodeFromMd) === perCode\n      ) {\n        md = md.replace(new RegExp(from, 'gm'), to)\n      }\n    })\n    const translationPerLangOption =\n      /<!--(?:-*)((?:uk|ru|en)(?:-(?:uk|ru|en))*)((?![-])\\W)(.*?)\\2([\\s\\S]*?)\\2-->/gm\n    ;[...md.matchAll(translationPerLangOption)].forEach(([_, perLang, __, from, to]) => {\n      if (perLang.split('-').length > 1) {\n        perLang = perLang.split('-')\n      }\n\n      if (\n        perLang instanceof Array\n          ? perLang.includes(this.lang || defaultLangFromMd)\n          : (this.lang || defaultLangFromMd) === perLang\n      ) {\n        md = md.replace(new RegExp(from, 'gm'), to)\n      }\n    })\n\n    this.debug && console.log('===md\\n' + md)\n\n    if (shouldBeCodalized) {\n      const codalizable =\n        /<((not-)?(?:js|ts|py|python|java|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)(?:-js|-ts|-py|-python|-java|-cs|-kt|-rb|-kt|-shell|-sh|-bash|-bat|-pwsh|-text|-md|-yaml|-json|-html|-xml)*)>([\\s\\S]*?)<\\/\\1>/gim\n      const codalize = (match, tag, inverted, content) => {\n        let candidates = inverted ? tag.split('-').slice(1) : tag.split('-')\n        candidates = candidates.map(item => (item === 'python' ? 'py' : item))\n\n        return `<span class=\"inline-content${\n          inverted\n            ? candidates.includes(this.code || defaultCodeFromMd)\n              ? ''\n              : ' active'\n            : candidates.includes(this.code || defaultCodeFromMd)\n            ? ' active'\n            : ''\n        }\" id=\"${tag}\">${content}</span>` // TODO: should we make here id value dependent on inverted?\n      }\n      while (md.match(codalizable)) {\n        md = md.replace(codalizable, codalize)\n      }\n    }\n\n    this.debug && console.log('===md after codalized\\n' + md)\n\n    if (shouldBeLocalized) {\n      const localizable = /<((not-)?(?:uk|ru|en)(?:-uk|-ru|-en)*)>([\\s\\S]*?)<\\/\\1>/gim\n      const localize = (match, tag, inverted, content) => {\n        const candidates = inverted ? tag.split('-').slice(1) : tag.split('-')\n        return inverted\n          ? candidates.includes(this.lang || defaultLangFromMd)\n            ? ''\n            : content\n          : candidates.includes(this.lang || defaultLangFromMd)\n          ? content\n          : ''\n      }\n      while (md.match(localizable)) {\n        md = md.replace(localizable, localize)\n      }\n    }\n\n    this.debug && console.log('===md after localized\\n' + md)\n\n    const tocStartLevelOption = /<!--TOC>(\\d)-->/i\n    const [, tocStartLevel] = md.match(tocStartLevelOption) || [null, 0]\n    renderer.heading = (text, level) => {\n      const [, pure, userId] = text.match(/^(.*)?\\s*{#(.*)}$/im) || [null, text]\n      const pureWithoutTagsExceptSpan = pure.replace(/<\\/?((?!span)\\w+)>/g, '')\n      const anchorIdsToLowerCase = this.config.anchorIdsToLowerCase\n      const id =\n        userId ||\n        (anchorIdsToLowerCase\n          ? IDfy(pureWithoutTagsExceptSpan)\n          : IDfy(pureWithoutTagsExceptSpan, { lowerCase: false }))\n      const pixelsNumber = this.config.indentInsideTocByPixels\n\n      if (level > tocStartLevel) {\n        const indentInsideToc = `style=\"margin-left: ${\n          pixelsNumber * (level - 1 - tocStartLevel)\n        }px\"`\n        tocLinks.push(\n          `<div ${indentInsideToc}><a href=\"#${id}\">${pureWithoutTagsExceptSpan}</a></div>`,\n        )\n      }\n\n      return `<h${level}>${encodeURI(id) === id ? '' : `<span id=\"${encodeURI(id)}\"></span>`}\n          <a id=\"${id}\" class=\"anchor\" aria-hidden=\"true\" href=\"#${id}\"></a>${pure}</h${level}>`\n    }\n\n    const imgBase = /]\\(\\.\\.?\\/resources/gim // todo: move ../resources to config\n    md = md.replace(imgBase, '](' + this.config.imgBaseNew)\n\n    const shortBreaks = /^,,,,+/gim\n    md = md.replace(shortBreaks, '<br/>'.repeat(this.config.shortBreaksNumber))\n\n    const pageBreaks = /^===$/gim\n    md = md.replace(pageBreaks, '<div style=\"page-break-after: always;\"></div>')\n\n    this.config.disableCodeHighlightingFor.forEach(lang => {\n      md = md.replace(new RegExp(`\\`\\`\\`${lang}`, 'gim'), '```')\n    })\n\n    const articleTypeExtension = /\\.(\\w+)\\.md(\\)|#)/gim\n    md = md.replace(articleTypeExtension, `-$1.md$2`)\n\n    // todo: fix to skip links that start with http\n    const mdExtensions = /\\.md\\)/gim\n    md = md.replace(mdExtensions, '-md)')\n\n    const mdExtensionsWithId = /\\.md#/gim\n    md = md.replace(mdExtensionsWithId, '-md#')\n\n    const poetryBoldOption = /<!--(.+?)poetryBold(.+?)-->/gi\n    const [, poetryBoldStart, poetryBoldEnd] = [...md.matchAll(poetryBoldOption)].at(-1) || [\n      null,\n      '__',\n      '__',\n    ]\n\n    const tabNameOption = /<!--(.+)tabNameBrackets(.+)-->/i\n    const [, tabNameStart, tabNameEnd] = md.match(tabNameOption) || [null, '\"', '\"']\n\n    const poetryBoldOptionRule = [\n      new RegExp(\n        `${poetryBoldStart}(?!${poetryBoldStart})(.*?)${poetryBoldEnd}(?!${poetryBoldEnd})`,\n        'gmi',\n      ),\n      '<b>$1</b>',\n    ]\n    // todo: change to ```poetry ... ``` style\n    const poetries =\n      /---[a-z]*\\n([\\s\\S]*?)\\n---/gim /* TODO: should have same abount of groups as backTickPoetries\n      or should be replaced with backTickPoetries completely, i.e. removed\n    */\n    const poetryRulesExceptBold = [\n      [/(_)___(?!\\1)(.*?)____(?!\\1)/gim, '<span style=\"text-decoration:underline\">$2</span>'], //underlined\n      [/(_)__(?!\\1)(.*?)___(?!\\1)/gim, '<em>$2</em>'], //emphasis (aka \"italic\")\n\n      // [/^(?!.*\\/\\*.*$).*(\\*)(.*?)\\1/gmi,      '<em>$2</em>'], //emphasis\n      // TODO: fix: does not work for lines: ... * ... * ... /* ... */ ...\n      // read for more info:\n      //    https://stackoverflow.com/questions/7376238/javascript-regex-look-behind-alternative\n    ]\n    isOriginalUnderscoredBoldDisabledByNonDefaultPoetryBoldOption = poetryBoldStart !== '__'\n    const backTickPoetries = /```poetry(?::( .+))?(?:\\n|\\r\\n)([\\s\\S]*?)\\n```/gim\n    const processPoetry = rules => (match, info, content) => {\n      // const titles = info.split(/\\s+/)\n      // const maybeCodeOrCustomNameOrBoth =\n      // /(?:^|\\s+)(js|ts|java|py|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)?(?:\"(.+?)\")?\"/g\n      const maybeCodeOrCustomNameOrBoth = new RegExp(\n        '(?:^|\\\\s+)' +\n          '(js|ts|java|py|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)?' +\n          `(?:${tabNameStart}(.+?)${tabNameEnd})?`,\n        'g',\n      )\n\n      const maybeCodeOrCustomNameOrBothPairs = [\n        ...(info?.trim().matchAll(maybeCodeOrCustomNameOrBoth) ?? []),\n      ].map(matched => ({ maybeCode: matched[1], maybeCustomName: matched[2] }))\n      let res = content\n\n      // TODO: encode all html elements definition tokens in poetry content with &lt;, &gt;, and &quot;\n      res = res.replace(/</gim, '&lt;')\n      res = res.replace(/>/gim, '&gt;')\n      res = res.replace(/\"/gim, '&quot;')\n\n      for (const rule of rules) {\n        res = res.replace(rule[0], rule[1])\n      }\n\n      if (isOriginalUnderscoredBoldDisabledByNonDefaultPoetryBoldOption) {\n        // then we should totally disable original __ and **\n        // in md processing (both by us and marked.js)\n        // by encoding it ...\n        res = res.replace(/(_)_(?!\\1)(.*?)__(?!\\1)/gim, '‡‡‡$2‡‡‡') // to encode original __\n        if (poetryBoldStart !== '\\\\*\\\\*') {\n          res = res.replace(/(\\*)\\*(?!\\1)(.*?)\\*\\*(?!\\1)/gim, '•••$2•••') // to encode original __\n        }\n        // then decode it later once md is processed and we get html...\n      }\n\n      const boldRules = [\n        poetryBoldOptionRule, //bold1\n        [/(\\*)\\*(?!\\1)(.*?)\\*\\*(?!\\1)/gim, '<b>$2</b>'], //bold2\n      ]\n\n      for (const rule of boldRules) {\n        res = res.replace(rule[0], rule[1])\n      }\n\n      const wrapped = maybeCodeOrCustomNameOrBothPairs.length\n        ? maybeCodeOrCustomNameOrBothPairs\n            .map(({ maybeCode, maybeCustomName }) =>\n              htmlTemplate.codeBlock({\n                code: maybeCode,\n                content: res,\n                customName: maybeCustomName,\n                isPoetry: true,\n              }),\n            )\n            // if somebody passed more than one pair in info,\n            // then we clone content into same amount of poetries\n            .join('\\n')\n        : htmlTemplate.codeBlock({ code: 'text', content: res, isPoetry: true })\n\n      return wrapped\n    }\n\n    md = md.replace(poetries, processPoetry(poetryRulesExceptBold))\n    md = md.replace(backTickPoetries, processPoetry(poetryRulesExceptBold))\n\n    const multiCodeBlocks = /```((?:[a-z]+)(?: [a-z]+)+)(?:\\n|\\r\\n)([\\s\\S]*?)\\n```/gim\n    md = md.replace(multiCodeBlocks, (match, codes, content) => {\n      return codes\n        .split(/\\s+/)\n        .map(code => `\\`\\`\\`${code}\\n${content}\\n\\`\\`\\``)\n        .join('\\n')\n    })\n\n    const multiTabsWithCustomNamesCodeBlocks =\n      /```\\b(?!poetry\\b)([a-z]+)(?:: (.+))(?:\\n|\\r\\n)([\\s\\S]*?)\\n```/gim\n    md = md.replace(multiTabsWithCustomNamesCodeBlocks, (match, code, info, content) => {\n      const customNameAndMaybeCode = [\n        ...info.matchAll(\n          new RegExp(\n            '(js|ts|java|py|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)?' +\n              tabNameStart +\n              '(.+?)' +\n              tabNameEnd,\n            'gim',\n          ),\n        ),\n      ].map(matched => ({ maybeCode: matched[1], customName: matched[2] }))\n      return customNameAndMaybeCode\n        .map(({ maybeCode, customName }) =>\n          htmlTemplate.codeBlock({ content, customName, code: maybeCode ?? code }),\n        )\n        .join('\\n')\n    })\n\n    /* GET HTML */\n\n    this.debug && console.log('===md before final processing via marked.js\\n' + md)\n\n    let html = window.marked(md, {\n      baseUrl: this.getBaseUrl(window.location.href),\n      renderer,\n      ...opts,\n    })\n\n    /* PROCESS HTML */\n\n    this.debug && console.log('===html before processing\\n' + html)\n\n    /* long breaks moved to be processed after md processing\n     * as a draft workaround to disable longBreaks processing inside code blocks\n     */\n    // const longBreaks = /^====+/gim\n    const longBreakInParagrapth = /<p>====+<\\/p>/gim\n    html = html.replace(longBreakInParagrapth, '<br/>'.repeat(this.config.longBreaksNumber))\n    const longBreakAtParagraphEnding = /^====+<\\/p>/gim\n    html = html.replace(\n      longBreakAtParagraphEnding,\n      '<br/>'.repeat(this.config.longBreaksNumber) + '</p>',\n    )\n\n    // decode previously decoded\n    if (isOriginalUnderscoredBoldDisabledByNonDefaultPoetryBoldOption) {\n      html = html.replace(/‡‡‡/gim, '__')\n      html = html.replace(/•••/gim, '**')\n    }\n\n    const tocMarker = /\\[toc\\]/i\n    const toc = `<div class=\"toc\">${tocLinks.join('')}</div>`\n    html = html.replace(tocMarker, toc)\n\n    const codeGroups = /<p>(:::+)(manual)?<\\/p>([\\s\\S]*?)<p>\\1<\\/p>/gim\n    const processCodeGroup = (match, _, manual, items) => {\n      const itemMarker =\n        /<pre><code( poetry)?(?: class=\"(?:language|code)-(\\w+)\")?( data-customName=\"(.+)\")?.*?>([\\s\\S]*?)<\\/code><\\/pre>/gim\n\n      // const contentAndMaybeCodeOrCustomNameOrAll = [...items.matchAll(itemMarker)].map(\n      //   (matched) => ({\n      //     maybeCode: matched[2],\n      //     maybeCustomName: matched[4],\n      //     content: matched[0],\n      //   }),\n      // )\n\n      let [itemsContent, itemsTitles] = [...items.matchAll(itemMarker)].reduce(\n        ([content, titles], [match, _, code, ___, customName, _____]) => {\n          const title = customName ? [code, customName] : [code]\n\n          return [\n            [...content, match],\n            [...titles, title],\n          ]\n        },\n        [[], []],\n      )\n\n      let processedCodes = []\n      return `\n          <div class=\"codeGroup\">\n            <div class=\"buttonWrapper\">\n              ${itemsTitles\n                .map((title, index) => {\n                  // TODO: name it and find good proper name\n\n                  const code = title[0]\n                  const customName = title[1]\n\n                  const html = `<button class=\"tab-button${\n                    manual\n                      ? index === 0\n                        ? ' active'\n                        : ''\n                      : (\n                          this.code\n                            ? this.code === code && !processedCodes.includes(code)\n                            : index === 0\n                        )\n                      ? ' active'\n                      : ''\n                  }\"${\n                    code || customName\n                      ? ' data-id=\"' + IDfy(customName ? code + '_' + customName : code) + '\"'\n                      : ''\n                  }>${customName ?? code ?? '__'}</button>`\n\n                  processedCodes.push(code)\n\n                  return html\n                })\n                .join('\\n')}\n            </div>\n            <div class=\"contentWrapper\">\n              ${itemsContent\n                .map((item, index) => {\n                  const title = itemsTitles[index]\n                  const code = title[0]\n                  const customName = title[1]\n                  if (index === 0) {\n                    processedCodes = [] // TODO: remove this mutation from lambda for map (such lambda should be pure, i.e. not mutating anything from outer scope)\n                  }\n\n                  const html = `<div class=\"tab-content${\n                    manual\n                      ? index === 0\n                        ? ' active'\n                        : ''\n                      : (\n                          this.code\n                            ? this.code === code && !processedCodes.includes(code)\n                            : index === 0\n                        )\n                      ? ' active'\n                      : ''\n                  }\"${\n                    code || customName\n                      ? ' id=\"' + IDfy(customName ? code + '_' + customName : code) + '\"'\n                      : ''\n                  }>${item}</div>`\n\n                  processedCodes.push(code)\n\n                  return html\n                })\n                .join('\\n')}\n            </div>\n          </div>\n          `.trim()\n    }\n\n    html = html.replace(codeGroups, processCodeGroup)\n\n    const languageJsMarker = /<pre><code class=\"language-(js|javascript)\"/gim\n    html = html.replace(languageJsMarker, '<pre><code class=\"language-typescript\"')\n\n    this.debug && console.log('===html after processing\\n' + html)\n\n    return `<div class=\"markdown-body${\n      opts.classes ? this.arrify(opts.classes).reduce((a, c) => `${a} ${c}`, ' ') : ''\n    }\">${html}</div>`\n  }\n\n  // Insert or replace HTML styles string into DOM and wait for links to load\n  async stampStyles(html) {\n    const node = this.makeNode(html)\n    const links = [...node.querySelectorAll('link[rel=\"stylesheet\"]')]\n    const target = [...this.root.children].find(n => n.classList.contains('markdown-styles'))\n    if (target) {\n      target.replaceWith(node)\n    } else {\n      this.root.prepend(node)\n    }\n    await Promise.all(links.map(l => this.onload(l))).catch(err => {\n      this.fire('zero-md-error', {\n        msg: '[zero-md] An external stylesheet failed to load',\n        status: undefined,\n        src: err.href,\n      })\n    })\n  }\n\n  // Insert or replace HTML body string into DOM and returns the node\n  stampBody(html) {\n    const node = this.makeNode(html)\n    const target = [...this.root.children].find(n => n.classList.contains('markdown-body'))\n    if (target) {\n      target.replaceWith(node)\n    } else {\n      this.root.append(node)\n    }\n    return node\n  }\n\n  // Start observing for changes in root, templates and scripts\n  observeChanges() {\n    this.observer.observe(this, { childList: true })\n    this.querySelectorAll('template,script[type=\"text/markdown\"]').forEach(n => {\n      this.observer.observe(n.content || n, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n      })\n    })\n  }\n\n  async render(opts = {}) {\n    await this.waitForReady()\n    const stamped = {}\n    const pending = this.buildMd(opts)\n    const css = this.buildStyles()\n    if (css !== this.cache.styles) {\n      this.cache.styles = css\n      await this.stampStyles(css)\n      stamped.styles = true\n      await this.tick()\n    }\n    const md = await pending\n    this.debug && console.log('\\n===built md:\\n' + md)\n    if (md !== this.cache.body) {\n      this.cache.body = md\n      const node = this.stampBody(md)\n\n      /* PROCESS CODE GROUP - START */\n      const tabsWrappers = node.querySelectorAll('.codeGroup')\n      tabsWrappers.forEach(tabsWrapper => {\n        function hideCodeGroupWithNoActiveTab() {\n          node.querySelectorAll('.codeGroup').forEach(codeGroup => {\n            const activeTab = codeGroup.querySelector('.tab-button.active')\n            codeGroup.style.display = activeTab ? 'block' : 'none'\n          })\n        }\n\n        function setActiveTabInAllCodeGroups(activeValue) {\n          node.querySelectorAll('.codeGroup .tab-button').forEach(tabButton => {\n            tabButton.dataset.id === activeValue\n              ? tabButton.classList.add('active')\n              : tabButton.classList.remove('active')\n          })\n          node.querySelectorAll(`.tab-content,.inline-content`).forEach(content => {\n            content.id === activeValue\n              ? content.classList.add('active')\n              : content.classList.remove('active')\n          })\n        }\n\n        const codalizedOption =\n          /<codalized(?: main=\"(js|ts|py|java|cs|clj|clojure|kt|rb|kt|shell|sh|bash|bat|pwsh|text|md|yaml|json|html|xml)\")?\\/>/gim\n        const [shouldBeCodalized, defaultCodeFromMd] =\n          [...md.matchAll(codalizedOption)].at(-1) || []\n        const codeValueFromAttributesSetByButtons = document\n          .querySelector('zero-md')\n          .getAttribute('code')\n\n        const urlParams = new URLSearchParams(window.location.search)\n        if (!urlParams.get('code')) {\n          if (shouldBeCodalized && !codeValueFromAttributesSetByButtons) {\n            setActiveTabInAllCodeGroups(this.code || defaultCodeFromMd)\n          }\n        }\n\n        tabsWrapper.onclick = e => {\n          const element = e.target\n          const newActiveContentId = element.dataset.id\n          const isElementANonActiveTabButton =\n            !!newActiveContentId && !element.classList.contains('active')\n          if (isElementANonActiveTabButton) {\n            if (this.config.groupCodeGroups) {\n              setActiveTabInAllCodeGroups(newActiveContentId)\n              hideCodeGroupWithNoActiveTab()\n            } else {\n              const buttonsWrapper = element.parentElement\n              buttonsWrapper.querySelector('.tab-button.active').classList.remove('active')\n              element.classList.add('active')\n\n              const wrapper = buttonsWrapper.parentElement\n              const contents = wrapper.querySelectorAll('.tab-content')\n              contents.forEach(content => {\n                content.classList.remove('active')\n              })\n              wrapper.querySelector(`#${newActiveContentId}`).classList.add('active')\n            }\n          }\n        }\n\n        hideCodeGroupWithNoActiveTab()\n      })\n      /* PROCESS CODE GROUP - END */\n      stamped.body = true\n      await this.highlight(node)\n    }\n\n    this.fire('zero-md-rendered', { stamped })\n  }\n}\ncustomElements.define('zero-md', ZeroMd)\n"],"names":["notAUnicodeWord","IDfy","name","options","lowerCase","replace","its","with","toLowerCase","htmlTemplate","code","customName","content","isPoetry","ZeroMd","HTMLElement","src","this","getAttribute","path","lang","URLSearchParams","window","location","search","get","config","debug","showDrafts","val","reflect","manualRender","hasAttribute","removeAttribute","setAttribute","observedAttributes","attributeChangedCallback","old","connected","render","constructor","defaults","super","version","markedUrl","prismUrl","cssUrls","hostCss","baseUrl","gitlab","token","projectId","branch","ZeroMdConfig","disableCodeHighlightingFor","shortBreaksNumber","longBreaksNumber","anchorIdsToLowerCase","indentInsideTocByPixels","imgBaseOld","imgBaseNew","groupCodeGroups","pTagLang","undefined","cache","root","attachShadow","mode","ready","Promise","all","marked","loadScript","Prism","clicked","bind","then","setTimeout","goto","hash","observer","MutationObserver","async","observeChanges","connectedCallback","fire","bubbles","composed","waitForReady","shadowRoot","addEventListener","disconnectedCallback","removeEventListener","resolve","handler","waitForRendered","rendered","detail","opts","msg","console","warn","dispatchEvent","CustomEvent","node","tick","requestAnimationFrame","arrify","any","Array","isArray","onload","reject","onerror","err","composedPath","urls","map","item","url","attrs","el","document","createElement","forEach","attr","head","appendChild","id","getElementById","substring","scrollIntoView","ev","metaKey","ctrlKey","altKey","shiftKey","defaultPrevented","a","target","closest","host","pathname","dedent","str","match","RegExp","getBaseUrl","href","lastIndexOf","highlight","container","log","querySelector","innerHTML","highlightAllUnder","makeNode","html","tpl","firstElementChild","buildStyles","query","reduce","c","renderer","Renderer","isOriginalUnderscoredBoldDisabledByNonDefaultPoetryBoldOption","tocLinks","fetchDataFromGitlab","absolutePath","encodeURIComponent","fileUrl","trim","gitlabAbsoluteUrl","fetch","headers","isReadingFromGitlabConfigured","md","responce","startsWith","ok","text","status","script","importsMatch","matchAll","length","importURL","currentZeroMdPath","currentZeroMdFileNestingDepth","split","response","importedFileNestingMatch","thisPathLastElement","pop","filePathtoReplace","importedFileNestingDepth","filter","error","importURLPurePath","importedFileFolderIndex","slice","concat","join","importedContent","test","codalizedOption","shouldBeCodalized","$1","$2","at","defaultCodeFromMd","shouldBeLocalized","$group1","$group2","defaultLangFromMd","translation","translate","_match","_delimiter","from","to","e","_","perCode","__","includes","perLang","codalizable","codalize","tag","inverted","candidates","localizable","localize","tocStartLevel","heading","level","pure","userId","pureWithoutTagsExceptSpan","pixelsNumber","indentInsideToc","push","encodeURI","repeat","poetryBoldStart","poetryBoldEnd","tabNameStart","tabNameEnd","poetryBoldOptionRule","poetryRulesExceptBold","processPoetry","rules","info","maybeCodeOrCustomNameOrBoth","maybeCodeOrCustomNameOrBothPairs","matched","maybeCode","maybeCustomName","res","rule","boldRules","wrapped","codes","toc","manual","items","itemsContent","itemsTitles","titles","___","_____","processedCodes","title","index","classes","links","querySelectorAll","children","find","n","classList","contains","replaceWith","prepend","l","catch","stampBody","append","observe","childList","subtree","attributes","characterData","stamped","pending","buildMd","css","styles","stampStyles","body","tabsWrapper","hideCodeGroupWithNoActiveTab","codeGroup","activeTab","style","display","setActiveTabInAllCodeGroups","activeValue","tabButton","dataset","add","remove","codeValueFromAttributesSetByButtons","onclick","element","newActiveContentId","buttonsWrapper","parentElement","wrapper","customElements","define"],"mappings":"AAAA,MAAMA,EACJ,wpIAEa,SAASC,EACtBC,EACAC,EAAU,CAAEC,WAAW,EAAMC,QAAS,CAAEC,IAAKN,EAAiBO,KAAM,OAEpE,OAAOJ,EAAQC,UACXF,EAAKM,cAAcH,QAAQF,EAAQE,QAAQC,IAAKH,EAAQE,QAAQE,MAChEL,EAAKG,QAAQF,EAAQE,QAAQC,IAAKH,EAAQE,QAAQE,KACxD,CCRA,MAAME,EAUO,EAAGC,OAAMC,aAAYC,UAASC,cACvC,aAAaA,EAAW,UAAY,KAClCH,EAAO,WAAWG,EAAW,OAAS,cAAcH,KAAU,KAC7DC,EAAa,qBAAqBA,KAAgB,MAAMC,iBAGxD,MAAME,UAAeC,YACtBC,UACF,OAAOC,KAAKC,aAAa,MAC1B,CAEGC,WACF,OAAOF,KAAKC,aAAa,OAC1B,CAEGE,WACF,OACE,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAChDR,KAAKC,aAAa,SAClBD,KAAKS,OAAON,IAEf,CAEGV,WACF,OACE,IAAIW,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAChDR,KAAKC,aAAa,SAClBD,KAAKS,OAAOhB,IAEf,CAEGiB,YACF,OACE,IAAIN,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,UAChDR,KAAKC,aAAa,UAClBD,KAAKS,QAAQC,KAEhB,CAEGC,iBACF,OACE,IAAIP,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,eAChDR,KAAKC,aAAa,eAClBD,KAAKS,QAAQE,UAEhB,CAEGZ,QAAIa,GACNZ,KAAKa,QAAQ,MAAOD,EACrB,CAEGV,SAAKU,GACPZ,KAAKa,QAAQ,OAAQD,EACtB,CAEGT,SAAKS,GACPZ,KAAKa,QAAQ,OAAQD,EACtB,CAEGnB,SAAKmB,GACPZ,KAAKa,QAAQ,OAAQD,EACtB,CAEGE,mBACF,OAAOd,KAAKe,aAAa,gBAC1B,CAEGD,iBAAaF,GACfZ,KAAKa,QAAQ,gBAAiBD,EAC/B,CAEDC,QAAQ5B,EAAM2B,IACA,IAARA,EACFZ,KAAKgB,gBAAgB/B,GAErBe,KAAKiB,aAAahC,GAAc,IAAR2B,EAAe,GAAKA,EAE/C,CAEUM,gCACT,MAAO,CAAC,MAAO,OAAQ,OAAQ,OAChC,CAEDC,yBAAyBlC,EAAMmC,EAAKR,GAEtB,QAAT3B,GAA2B,SAATA,GAA4B,SAATA,GAA4B,SAATA,IACzDe,KAAKqB,WACJrB,KAAKc,cACNF,IAAQQ,GAERpB,KAAKsB,QAER,CAEDC,YAAYC,GACVC,QACAzB,KAAK0B,QAAU,QACf1B,KAAKS,OAAS,CACZkB,UAAW,8DACXC,SAAU,CACR,CAAC,2DAA4D,eAC7D,0FAEFC,QAAS,CACP,yFACA,mEACA,kJAEFC,QACE,unFA2FFC,QAAS,GACTC,OAAQ,CACNC,MAAO,KACPC,UAAW,KACXhC,KAAM,KACNiC,OAAQ,YACL9B,OAAO+B,aAAaJ,QAEzBK,2BAA4B,GAC5BC,kBAAmB,EACnBC,iBAAkB,GAClBC,sBAAsB,EACtBC,wBAAyB,GACzBC,WAAY,cACZC,WAAY,2DACZxC,KAAM,KACNV,KAAM,KACNmD,iBAAiB,EACjBC,cAAUC,KACPtB,KACAnB,OAAO+B,cAEZpC,KAAK+C,MAAQ,CAAE,EACf/C,KAAKgD,KAAOhD,KAAKe,aAAa,aAAef,KAAOA,KAAKiD,aAAa,CAAEC,KAAM,SACzElD,KAAKuB,YAAY4B,QACpBnD,KAAKuB,YAAY4B,MAAQC,QAAQC,IAAI,GACjChD,OAAOiD,QAAUtD,KAAKuD,WAAWvD,KAAKS,OAAOkB,aAC7CtB,OAAOmD,OAASxD,KAAKuD,WAAWvD,KAAKS,OAAOmB,aAGlD5B,KAAKyD,QAAUzD,KAAKyD,QAAQC,KAAK1D,MAC5BA,KAAKc,cAGRd,KAAKsB,SAASqC,MAAK,IAAMC,YAAW,IAAM5D,KAAK6D,KAAKvD,SAASwD,OAAO,OAEtE9D,KAAK+D,SAAW,IAAIC,kBAAiBC,UACnCjE,KAAKkE,iBACAlE,KAAKc,oBACFd,KAAKsB,QACZ,IAEHtB,KAAKkE,gBACN,CAEDC,oBACEnE,KAAKqB,WAAY,EACjBrB,KAAKoE,KAAK,oBAAqB,CAAE,EAAE,CAAEC,SAAS,EAAOC,UAAU,IAC/DtE,KAAKuE,eAAeZ,MAAK,KACvB3D,KAAKoE,KAAK,gBAAgB,IAExBpE,KAAKwE,YACPxE,KAAKwE,WAAWC,iBAAiB,QAASzE,KAAKyD,QAElD,CAEDiB,uBACE1E,KAAKqB,WAAY,EACbrB,KAAKwE,YACPxE,KAAKwE,WAAWG,oBAAoB,QAAS3E,KAAKyD,QAErD,CAEDc,eACE,MAAMpB,EACJnD,KAAKqB,WACL,IAAI+B,SAAQwB,IACV5E,KAAKyE,iBAAiB,qBAAqB,SAASI,IAClD7E,KAAK2E,oBAAoB,oBAAqBE,GAC9CD,GACV,GAAU,IAEN,OAAOxB,QAAQC,IAAI,CAACrD,KAAKuB,YAAY4B,MAAOA,GAC7C,CAGD2B,kBACE,MAAMC,EAAW,IAAI3B,SAAQwB,IAC3B5E,KAAKyE,iBAAiB,oBAAoB,SAASI,IACjD7E,KAAK2E,oBAAoB,mBAAoBE,GAC7CD,GACR,GAAQ,IAEJ,OAAOxB,QAAQC,IAAI,CAACrD,KAAKuB,YAAY4B,MAAO4B,GAC7C,CAEDX,KAAKnF,EAAM+F,EAAS,GAAIC,EAAO,CAAEZ,SAAS,EAAMC,UAAU,IACpDU,EAAOE,KACTC,QAAQC,KAAKJ,EAAOE,KAEtBlF,KAAKqF,cACH,IAAIC,YAAYrG,EAAM,CACpB+F,OAAQ,CAAEO,KAAMvF,QAASgF,MACtBC,IAGR,CAEDO,OACE,OAAO,IAAIpC,SAAQwB,GAAWa,sBAAsBb,IACrD,CAGDc,OAAOC,GACL,OAAOA,EAAOC,MAAMC,QAAQF,GAAOA,EAAM,CAACA,GAAQ,EACnD,CAGDG,OAAOP,GACL,OAAO,IAAInC,SAAQ,CAACwB,EAASmB,KAC3BR,EAAKO,OAASlB,EACdW,EAAKS,QAAUC,GAAOF,EAAOE,EAAI/F,KAAO+F,EAAI/F,KAAK,GAAK+F,EAAIC,eAAe,GAAG,GAE/E,CAGD3C,WAAW4C,GACT,OAAO/C,QAAQC,IACbrD,KAAK0F,OAAOS,GAAMC,KAAIC,IACpB,MAAOC,KAAQC,GAASvG,KAAK0F,OAAOW,GAC9BG,EAAKC,SAASC,cAAc,UAIlC,OAHAF,EAAGzG,IAAMuG,EACTE,EAAGvC,OAAQ,EACXsC,EAAMI,SAAQC,GAAQJ,EAAGvF,aAAa2F,EAAM,MACrC5G,KAAK8F,OAAOW,SAASI,KAAKC,YAAYN,GAAG,IAGrD,CAGD3C,KAAKkD,GACH,GAAIA,EAAI,CACN,MAAMP,EAAKxG,KAAKgD,KAAKgE,eAAeD,EAAGE,UAAU,IAC7CT,GACFA,EAAGU,gBAEN,CACF,CAGDzD,QAAQ0D,GACN,GAAIA,EAAGC,SAAWD,EAAGE,SAAWF,EAAGG,QAAUH,EAAGI,UAAYJ,EAAGK,iBAC7D,OAEF,MAAMC,EAAIN,EAAGO,OAAOC,QAAQ,KACxBF,GAAKA,EAAE3D,MAAQ2D,EAAEG,OAAStH,SAASsH,MAAQH,EAAEI,WAAavH,SAASuH,UACrE7H,KAAK6D,KAAK4D,EAAE3D,KAEf,CAEDgE,OAAOC,GAEL,MAAMC,GADND,EAAMA,EAAI3I,QAAQ,MAAO,KACP4I,MAAM,QACxB,OAAOA,EAAQD,EAAI3I,QAAQ,IAAI6I,OAAO,IAAID,EAAM,KAAM,MAAO,IAAMD,CACpE,CAEDG,WAAWnI,GACT,MAAM0H,EAAIhB,SAASC,cAAc,KAEjC,OADAe,EAAEU,KAAOpI,EACF0H,EAAEU,KAAKlB,UAAU,EAAGQ,EAAEU,KAAKC,YAAY,KAAO,EACtD,CAGDC,UAAUC,GACR,OAAO,IAAIlF,SAAQwB,IAuBjB5E,KAAKU,OACHyE,QAAQoD,IACN,yBACE9B,SAAS+B,cAAc,WAAWhE,WAAWgE,cAAc,kBAAkBC,WAGnF,IACEpI,OAAOmD,MAAMkF,kBAAkBJ,GAAW,EAAM1D,KAEhD5E,KAAKU,OACHyE,QAAQoD,IACN,sBACE9B,SAAS+B,cAAc,WAAWhE,WAAWgE,cAAc,kBACxDC,UAYV,CAVC,MACApI,OAAOmD,MAAMkF,kBAAkBJ,GAC/B1D,IAEA5E,KAAKU,OACHyE,QAAQoD,IACN,sBACE9B,SAAS+B,cAAc,WAAWhE,WAAWgE,cAAc,kBACxDC,UAEV,IAEJ,CAGDE,SAASC,GACP,MAAMC,EAAMpC,SAASC,cAAc,YAEnC,OADAmC,EAAIJ,UAAYG,EACTC,EAAIlJ,QAAQmJ,iBACpB,CAGDC,cACE,MAAMvI,EAAMwI,IACV,MAAMzD,EAAOvF,KAAKwI,cAAcQ,GAChC,OAAOzD,EAAOA,EAAKkD,WAAa,IAAM,IAElCtC,EAAOnG,KAAK0F,OAAO1F,KAAKS,OAAOoB,SAOrC,MANa,uCAAuC7B,KAAKS,OAAOqB,kBAAkBtB,EAChF,oCAEAA,EAAI,+BACJ2F,EAAK8C,QAAO,CAACxB,EAAGyB,IAAM,GAAGzB,iCAAiCyB,OAAO,MAChE1I,EAAI,wCAER,CAGDyD,cAAcgB,EAAO,IACnB,MAAMkE,EAAW,IAAI9I,OAAOiD,OAAO8F,SACnC,IAAIC,EACAC,EAAW,GAIf,MAAMC,EAAsBtF,UAC1B,MAAM8C,EAAK/G,KAAKS,OAAOuB,OAAOE,UACxBC,EAASnC,KAAKS,OAAOuB,OAAOG,OAC5BqH,EAAeC,mBAAmBC,EAAQC,QAGhD,OAFAC,EAAoB,sCAAsC7C,sBAAuByC,aAAwBrH,IAElG0H,MAAMD,EAAmB,CAC9BE,QAAS,CACP,gBAAiB9J,KAAKS,OAAOuB,OAAOC,QAEvC,EAGH,IAAI8H,EAAgC/J,KAAKS,OAAOuB,SAAW,CAAE,EACzD4H,EAAoB,GAsCxB,IAAII,OArCQ/F,WACV,IAAKjE,KAAKD,MAAQC,KAAKE,KACrB,MAAO,GAET,MAAM+J,EACJF,GAAiC/J,KAAKE,WAC5BqJ,EAAoBvJ,KAAKE,WACzB,WACJ,MAAMoG,EAAMtG,KAAKD,IAAI4J,OAGrB,OAFAC,EAAoBtD,EAAI4D,WAAW,QAAU5D,EAAMtG,KAAKS,OAAOsB,QAAUuE,EAElEuD,MAAMD,EACd,EALK,GAOZ,OAAIK,EAASE,SACEF,EAASG,QAEtBpK,KAAKoE,KAAK,gBAAiB,CACzBc,IAAK,wBAAwB+E,EAASI,4BACtCA,OAAQJ,EAASI,OACjBtK,IAAKC,KAAKD,IACVG,KAAMF,KAAKE,KACXC,KAAMH,KAAKG,KACXV,KAAMO,KAAKP,OAEN,GACR,EAWaM,IATD,MACb,MAAMyG,EAAKxG,KAAKwI,cAAc,gCAC9B,IAAKhC,EACH,MAAO,GAGT,OADWA,EAAGzF,aAAa,eAAiBf,KAAK8H,OAAOtB,EAAG4D,MAAQ5D,EAAG4D,IAC/DJ,EAGiBM,GAI1B,MACMC,EAAe,IAAIP,EAAGQ,SADR,mCAiBdD,EAAaE,cACTrH,QAAQC,IACZkH,EAAanE,KAAInC,OAAQ+D,EAAO0C,MAC9B,MAAMC,EACJZ,GAAiC/J,KAAKE,KAAOF,KAAKE,KAAOF,KAAKD,IAC1D6K,EAAgCD,EAAkBE,MAAM,KAAKJ,OAAS,EAE5E,IAAIK,EAEJ,IADuBJ,EAAUR,WAAW,QACzB,CACjB,MAAMa,EAA2BL,EAAU1C,MAAM,yBAEjD,GACG+C,GACqC,IAApCA,EAAyBN,QACO,MAAhCM,EAAyB,IACE,OAA7BA,EACA,CACA,MAAMC,EAAsBhL,KAAKE,KAAK2K,MAAM,KAAKI,MAC3CC,EAAoBH,EACtBL,EAAUG,MAAM,MAAM,GACtBH,EAAUG,MAAM,MAAM,GAE1BH,EAAY1K,KAAKE,KAAKd,QAAQ4L,EAAqBE,EACpD,CAED,GACEH,IACsC,IAApCA,EAAyBN,QAAgD,MAAhCM,EAAyB,IACpE,CACA,MAAMI,EAA2BJ,EAAyBK,QACxD/E,GAAiB,OAATA,IACRoE,OAEF,KAAIU,GAA4BP,GAW9B,YADAzF,QAAQkG,MAAM,qDAV+C,CAC7D,MAAMC,EAAoBZ,EAAUtL,QAAQ,kBAAmB,IACzDmM,EACJX,EAAgCO,EAClCT,EAAYC,EACTE,MAAM,KACNW,MAAM,EAAGD,GACTE,OAAOH,GACPI,KAAK,IAC1B,CAIe,CAEDZ,QAAiBvB,EAAoBmB,EACnD,MACcI,QAAiBjB,MAAMa,GAGzB,GAAII,EAASX,GAAI,CACf,MAAMwB,QAAwBb,EAASV,OACvCJ,EAAKA,EAAG5K,QAAQ4I,EAAO2D,EACxB,MAMgB,yBACJC,KAAK5B,IACxBhK,KAAKiB,aAAa,aAAc,QAIlC+I,EAAyB,SAApBhK,KAAKW,WAAwBqJ,EAAG5K,QAFnB,sBAEsC,IAAM4K,EAAG5K,QAD7C,6BACkE,IAEtF,MAAMyM,EAAkB,IAAI5D,OAC1B,6PAGA,QAEK6D,EAAmBC,EAAIC,GAAM,IAAIhC,EAAGQ,SAASqB,IAAkBI,IAAI,IAAM,GAC1EC,EAAoBH,GAAMC,EAChChM,KAAKU,OAASyE,QAAQoD,IAAI,4BAA8BuD,GACxD9L,KAAKU,OAASyE,QAAQoD,IAAI,4BAA8B2D,GAExD,MAEOC,EAAmBC,EAASC,GAAW,IAAIrC,EAAGQ,SADnD,kGAC8EyB,IAAI,IAAM,GACpFK,EAAoBF,GAAWC,EAErCrM,KAAKU,OAASyE,QAAQoD,IAAI,uBAC1B,MAAMgE,EAAc,4CACdC,EAAY,EAAEC,EAAQC,EAAYC,EAAMC,MAC5C,IACE5C,EAAKA,EAAG5K,QAAQ,IAAI6I,OAAO,kBAAiB0E,EAAM,MAAOC,EAO1D,CANC,MAAOC,GACP7M,KAAKU,OAASyE,QAAQoD,IAAI,aAAekE,GACzCzM,KAAKU,OAASyE,QAAQoD,IAAI,iBAAmBmE,GAC7C1M,KAAKU,OAASyE,QAAQoD,IAAI,YAAcoE,GACxC3M,KAAKU,OAASyE,QAAQoD,IAAI,UAAYqE,GACtCzH,QAAQkG,MAAMwB,EACf,GAEF,IAAI7C,EAAGQ,SAAS+B,IAAc5F,QAAQ6F,GACvCxM,KAAKU,OAASyE,QAAQoD,IAAI,0CAA4CyB,GAIrE,IAAIA,EAAGQ,SAAS+B,IAAc5F,QAAQ6F,GACvCxM,KAAKU,OAASyE,QAAQoD,IAAI,uBAC1BvI,KAAKU,OAASyE,QAAQoD,IAAI,qCAAuCyB,GAIhE,IAAIA,EAAGQ,SADN,gPAC0C7D,SAAQ,EAAEmG,EAAGC,EAASC,EAAIL,EAAMC,MACtEG,EAAQlC,MAAM,KAAKJ,OAAS,IAC9BsC,EAAUA,EAAQlC,MAAM,OAIxBkC,aAAmBnH,MACfmH,EAAQE,SAASjN,KAAKP,MAAQyM,IAC7BlM,KAAKP,MAAQyM,KAAuBa,KAEzC/C,EAAKA,EAAG5K,QAAQ,IAAI6I,OAAO0E,EAAM,MAAOC,GACzC,IAoBH,GAhBC,IAAI5C,EAAGQ,SADN,kFAC0C7D,SAAQ,EAAEmG,EAAGI,EAASF,EAAIL,EAAMC,MACtEM,EAAQrC,MAAM,KAAKJ,OAAS,IAC9ByC,EAAUA,EAAQrC,MAAM,OAIxBqC,aAAmBtH,MACfsH,EAAQD,SAASjN,KAAKG,MAAQmM,IAC7BtM,KAAKG,MAAQmM,KAAuBY,KAEzClD,EAAKA,EAAG5K,QAAQ,IAAI6I,OAAO0E,EAAM,MAAOC,GACzC,IAGH5M,KAAKU,OAASyE,QAAQoD,IAAI,UAAYyB,GAElC8B,EAAmB,CACrB,MAAMqB,EACJ,8OACIC,EAAW,CAACpF,EAAOqF,EAAKC,EAAU3N,KACtC,IAAI4N,EAAaD,EAAWD,EAAIxC,MAAM,KAAKW,MAAM,GAAK6B,EAAIxC,MAAM,KAGhE,OAFA0C,EAAaA,EAAWnH,KAAIC,GAAkB,WAATA,EAAoB,KAAOA,IAEzD,8BACLiH,EACIC,EAAWN,SAASjN,KAAKP,MAAQyM,GAC/B,GACA,UACFqB,EAAWN,SAASjN,KAAKP,MAAQyM,GACjC,UACA,WACGmB,MAAQ1N,UAAO,EAE1B,KAAOqK,EAAGhC,MAAMmF,IACdnD,EAAKA,EAAG5K,QAAQ+N,EAAaC,EAEhC,CAID,GAFApN,KAAKU,OAASyE,QAAQoD,IAAI,0BAA4ByB,GAElDmC,EAAmB,CACrB,MAAMqB,EAAc,6DACdC,EAAW,CAACzF,EAAOqF,EAAKC,EAAU3N,KACtC,MAAM4N,EAAaD,EAAWD,EAAIxC,MAAM,KAAKW,MAAM,GAAK6B,EAAIxC,MAAM,KAClE,OAAOyC,EACHC,EAAWN,SAASjN,KAAKG,MAAQmM,GAC/B,GACA3M,EACF4N,EAAWN,SAASjN,KAAKG,MAAQmM,GACjC3M,EACA,IAEN,KAAOqK,EAAGhC,MAAMwF,IACdxD,EAAKA,EAAG5K,QAAQoO,EAAaC,EAEhC,CAEDzN,KAAKU,OAASyE,QAAQoD,IAAI,0BAA4ByB,GAEtD,MACS,CAAA0D,GAAiB1D,EAAGhC,MADD,qBAC+B,CAAC,KAAM,GAClEmB,EAASwE,QAAU,CAACvD,EAAMwD,KACxB,MAAS,CAAAC,EAAMC,GAAU1D,EAAKpC,MAAM,wBAA0B,CAAC,KAAMoC,GAC/D2D,EAA4BF,EAAKzO,QAAQ,sBAAuB,IAChEoD,EAAuBxC,KAAKS,OAAO+B,qBACnCuE,EACJ+G,IACCtL,EACGxD,EAAK+O,GACL/O,EAAK+O,EAA2B,CAAE5O,WAAW,KAC7C6O,EAAehO,KAAKS,OAAOgC,wBAEjC,GAAImL,EAAQF,EAAe,CACzB,MAAMO,EAAkB,uBACtBD,GAAgBJ,EAAQ,EAAIF,QAE9BpE,EAAS4E,KACP,QAAQD,eAA6BlH,MAAOgH,cAE/C,CAED,MAAO,KAAKH,KAASO,UAAUpH,KAAQA,EAAK,GAAK,aAAaoH,UAAUpH,mCAC3DA,+CAAgDA,UAAW8G,OAAUD,IAAK,EAIzF5D,EAAKA,EAAG5K,QADQ,yBACS,KAAOY,KAAKS,OAAOkC,YAG5CqH,EAAKA,EAAG5K,QADY,YACS,QAAQgP,OAAOpO,KAAKS,OAAO6B,oBAGxD0H,EAAKA,EAAG5K,QADW,WACS,iDAE5BY,KAAKS,OAAO4B,2BAA2BsE,SAAQxG,IAC7C6J,EAAKA,EAAG5K,QAAQ,IAAI6I,OAAO,SAAS9H,IAAQ,OAAQ,MAAM,IAI5D6J,EAAKA,EAAG5K,QADqB,uBACS,YAItC4K,EAAKA,EAAG5K,QADa,YACS,QAG9B4K,EAAKA,EAAG5K,QADmB,WACS,QAEpC,OACSiP,EAAiBC,GAAiB,IAAItE,EAAGQ,SADzB,kCACqDyB,IAAI,IAAM,CACtF,KACA,KACA,QAIOsC,EAAcC,GAAcxE,EAAGhC,MADlB,oCAC0C,CAAC,KAAM,IAAK,KAEtEyG,EAAuB,CAC3B,IAAIxG,OACF,GAAGoG,OAAqBA,UAAwBC,OAAmBA,KACnE,OAEF,aAOII,EAAwB,CAC5B,CAAC,iCAAkC,qDACnC,CAAC,+BAAgC,gBAOnCrF,EAAoF,OAApBgF,EAChE,MACMM,EAAgBC,GAAS,CAAC5G,EAAO6G,EAAMlP,KAI3C,MAAMmP,EAA8B,IAAI7G,OAGpC,0GAAMsG,SAAoBC,MAC5B,KAGIO,EAAmC,IACnCF,GAAMlF,OAAOa,SAASsE,IAAgC,IAC1D1I,KAAI4I,KAAcC,UAAWD,EAAQ,GAAIE,gBAAiBF,EAAQ,OACpE,IAAIG,EAAMxP,EAGVwP,EAAMA,EAAI/P,QAAQ,OAAQ,QAC1B+P,EAAMA,EAAI/P,QAAQ,OAAQ,QAC1B+P,EAAMA,EAAI/P,QAAQ,OAAQ,UAE1B,IAAK,MAAMgQ,KAAQR,EACjBO,EAAMA,EAAI/P,QAAQgQ,EAAK,GAAIA,EAAK,IAG9B/F,IAIF8F,EAAMA,EAAI/P,QAAQ,6BAA8B,YACxB,WAApBiP,IACFc,EAAMA,EAAI/P,QAAQ,iCAAkC,cAKxD,MAAMiQ,EAAY,CAChBZ,EACA,CAAC,iCAAkC,cAGrC,IAAK,MAAMW,KAAQC,EACjBF,EAAMA,EAAI/P,QAAQgQ,EAAK,GAAIA,EAAK,IAkBlC,OAfgBL,EAAiCtE,OAC7CsE,EACG3I,KAAI,EAAG6I,YAAWC,qBACjB1P,EAAuB,CACrBC,KAAMwP,EACNtP,QAASwP,EACTzP,WAAYwP,EACZtP,UAAU,MAKb8L,KAAK,MACRlM,EAAuB,CAAEC,KAAM,OAAQE,QAASwP,EAAKvP,UAAU,GAE5D0P,EAGTtF,EAAKA,EAAG5K,QA7EN,gCA6EwBuP,EAAcD,IACxC1E,EAAKA,EAAG5K,QAjEiB,oDAiESuP,EAAcD,IAGhD1E,EAAKA,EAAG5K,QADgB,4DACS,CAAC4I,EAAOuH,EAAO5P,IACvC4P,EACJ1E,MAAM,OACNzE,KAAI3G,GAAQ,SAASA,MAASE,cAC9B+L,KAAK,QAKV1B,EAAKA,EAAG5K,QADN,oEACkD,CAAC4I,EAAOvI,EAAMoP,EAAMlP,IACvC,IAC1BkP,EAAKrE,SACN,IAAIvC,OACF,6FACEsG,EACA,QACAC,EACF,SAGJpI,KAAI4I,KAAcC,UAAWD,EAAQ,GAAItP,WAAYsP,EAAQ,OAE5D5I,KAAI,EAAG6I,YAAWvP,gBACjBF,EAAuB,CAAEG,UAASD,aAAYD,KAAMwP,GAAaxP,MAElEiM,KAAK,QAKV1L,KAAKU,OAASyE,QAAQoD,IAAI,gDAAkDyB,GAE5E,IAAIpB,EAAOvI,OAAOiD,OAAO0G,EAAI,CAC3BjI,QAAS/B,KAAKkI,WAAW7H,OAAOC,SAAS6H,MACzCgB,cACGlE,IAKLjF,KAAKU,OAASyE,QAAQoD,IAAI,8BAAgCK,GAO1DA,EAAOA,EAAKxJ,QADkB,mBACa,QAAQgP,OAAOpO,KAAKS,OAAO8B,mBAEtEqG,EAAOA,EAAKxJ,QADuB,iBAGjC,QAAQgP,OAAOpO,KAAKS,OAAO8B,kBAAoB,QAI7C8G,IACFT,EAAOA,EAAKxJ,QAAQ,SAAU,MAC9BwJ,EAAOA,EAAKxJ,QAAQ,SAAU,OAGhC,MACMoQ,EAAM,oBAAoBlG,EAASoC,KAAK,YAC9C9C,EAAOA,EAAKxJ,QAFM,WAEaoQ,GAoG/B5G,EAAOA,EAAKxJ,QAlGO,kDACM,CAAC4I,EAAO8E,EAAG2C,EAAQC,KAY1C,IAAKC,EAAcC,GAAe,IAAIF,EAAMlF,SAV1C,wHAUgEvB,QAChE,EAAEtJ,EAASkQ,IAAU7H,EAAO8E,EAAGrN,EAAMqQ,EAAKpQ,EAAYqQ,KAG7C,CACL,IAAIpQ,EAASqI,GACb,IAAI6H,EAJQnQ,EAAa,CAACD,EAAMC,GAAc,CAACD,MAOnD,CAAC,GAAI,KAGHuQ,EAAiB,GACrB,MAAO,+FAGGJ,EACCxJ,KAAI,CAAC6J,EAAOC,KAGX,MAAMzQ,EAAOwQ,EAAM,GACbvQ,EAAauQ,EAAM,GAEnBrH,EAAO,4BACX6G,EACc,IAAVS,EACE,UACA,IAEAlQ,KAAKP,KACDO,KAAKP,OAASA,GAASuQ,EAAe/C,SAASxN,GACrC,IAAVyQ,GAGN,GADA,aAGJzQ,GAAQC,EACJ,aAAeV,EAAKU,EAAaD,EAAO,IAAMC,EAAaD,GAAQ,IACnE,MACFC,GAAcD,GAAQ,gBAI1B,OAFAuQ,EAAe9B,KAAKzO,GAEbmJ,KAER8C,KAAK,sFAGNiE,EACCvJ,KAAI,CAACC,EAAM6J,KACV,MAAMD,EAAQL,EAAYM,GACpBzQ,EAAOwQ,EAAM,GACbvQ,EAAauQ,EAAM,GACX,IAAVC,IACFF,EAAiB,IAGnB,MAAMpH,EAAO,0BACX6G,EACc,IAAVS,EACE,UACA,IAEAlQ,KAAKP,KACDO,KAAKP,OAASA,GAASuQ,EAAe/C,SAASxN,GACrC,IAAVyQ,GAGN,GADA,aAGJzQ,GAAQC,EACJ,QAAUV,EAAKU,EAAaD,EAAO,IAAMC,EAAaD,GAAQ,IAC9D,MACF4G,UAIJ,OAFA2J,EAAe9B,KAAKzO,GAEbmJ,KAER8C,KAAK,0DAGV/B,MAAM,IAUd,OAJAf,EAAOA,EAAKxJ,QADa,iDACa,0CAEtCY,KAAKU,OAASyE,QAAQoD,IAAI,6BAA+BK,GAElD,4BACL3D,EAAKkL,QAAUnQ,KAAK0F,OAAOT,EAAKkL,SAASlH,QAAO,CAACxB,EAAGyB,IAAM,GAAGzB,KAAKyB,KAAK,KAAO,OAC3EN,SACN,CAGD3E,kBAAkB2E,GAChB,MAAMrD,EAAOvF,KAAK2I,SAASC,GACrBwH,EAAQ,IAAI7K,EAAK8K,iBAAiB,2BAClC3I,EAAS,IAAI1H,KAAKgD,KAAKsN,UAAUC,MAAKC,GAAKA,EAAEC,UAAUC,SAAS,qBAClEhJ,EACFA,EAAOiJ,YAAYpL,GAEnBvF,KAAKgD,KAAK4N,QAAQrL,SAEdnC,QAAQC,IAAI+M,EAAMhK,KAAIyK,GAAK7Q,KAAK8F,OAAO+K,MAAKC,OAAM7K,IACtDjG,KAAKoE,KAAK,gBAAiB,CACzBc,IAAK,kDACLmF,YAAQvH,EACR/C,IAAKkG,EAAIkC,MACT,GAEL,CAGD4I,UAAUnI,GACR,MAAMrD,EAAOvF,KAAK2I,SAASC,GACrBlB,EAAS,IAAI1H,KAAKgD,KAAKsN,UAAUC,MAAKC,GAAKA,EAAEC,UAAUC,SAAS,mBAMtE,OALIhJ,EACFA,EAAOiJ,YAAYpL,GAEnBvF,KAAKgD,KAAKgO,OAAOzL,GAEZA,CACR,CAGDrB,iBACElE,KAAK+D,SAASkN,QAAQjR,KAAM,CAAEkR,WAAW,IACzClR,KAAKqQ,iBAAiB,yCAAyC1J,SAAQ6J,IACrExQ,KAAK+D,SAASkN,QAAQT,EAAE7Q,SAAW6Q,EAAG,CACpCU,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,eAAe,GACf,GAEL,CAEDpN,aAAagB,EAAO,UACZjF,KAAKuE,eACX,MAAM+M,EAAU,CAAE,EACZC,EAAUvR,KAAKwR,QAAQvM,GACvBwM,EAAMzR,KAAK+I,cACb0I,IAAQzR,KAAK+C,MAAM2O,SACrB1R,KAAK+C,MAAM2O,OAASD,QACdzR,KAAK2R,YAAYF,GACvBH,EAAQI,QAAS,QACX1R,KAAKwF,QAEb,MAAMwE,QAAWuH,EAEjB,GADAvR,KAAKU,OAASyE,QAAQoD,IAAI,mBAAqByB,GAC3CA,IAAOhK,KAAK+C,MAAM6O,KAAM,CAC1B5R,KAAK+C,MAAM6O,KAAO5H,EAClB,MAAMzE,EAAOvF,KAAK+Q,UAAU/G,GAGPzE,EAAK8K,iBAAiB,cAC9B1J,SAAQkL,IACnB,SAASC,IACPvM,EAAK8K,iBAAiB,cAAc1J,SAAQoL,IAC1C,MAAMC,EAAYD,EAAUvJ,cAAc,sBAC1CuJ,EAAUE,MAAMC,QAAUF,EAAY,QAAU,MAAM,GAEzD,CAED,SAASG,EAA4BC,GACnC7M,EAAK8K,iBAAiB,0BAA0B1J,SAAQ0L,IACtDA,EAAUC,QAAQvL,KAAOqL,EACrBC,EAAU5B,UAAU8B,IAAI,UACxBF,EAAU5B,UAAU+B,OAAO,SAAS,IAE1CjN,EAAK8K,iBAAiB,gCAAgC1J,SAAQhH,IAC5DA,EAAQoH,KAAOqL,EACXzS,EAAQ8Q,UAAU8B,IAAI,UACtB5S,EAAQ8Q,UAAU+B,OAAO,SAAS,GAEzC,CAED,MAEO1G,EAAmBI,GACxB,IAAIlC,EAAGQ,SAFP,2HAEkCyB,IAAI,IAAM,GACxCwG,EAAsChM,SACzC+B,cAAc,WACdvI,aAAa,QAEE,IAAIG,gBAAgBC,OAAOC,SAASC,QACvCC,IAAI,SACbsL,IAAsB2G,GACxBN,EAA4BnS,KAAKP,MAAQyM,GAI7C2F,EAAYa,QAAU7F,IACpB,MAAM8F,EAAU9F,EAAEnF,OACZkL,EAAqBD,EAAQL,QAAQvL,GAG3C,KADI6L,IAAuBD,EAAQlC,UAAUC,SAAS,UAEpD,GAAI1Q,KAAKS,OAAOmC,gBACduP,EAA4BS,GAC5Bd,QACK,CACL,MAAMe,EAAiBF,EAAQG,cAC/BD,EAAerK,cAAc,sBAAsBiI,UAAU+B,OAAO,UACpEG,EAAQlC,UAAU8B,IAAI,UAEtB,MAAMQ,EAAUF,EAAeC,cACdC,EAAQ1C,iBAAiB,gBACjC1J,SAAQhH,IACfA,EAAQ8Q,UAAU+B,OAAO,SAAS,IAEpCO,EAAQvK,cAAc,IAAIoK,KAAsBnC,UAAU8B,IAAI,SAC/D,CACF,EAGHT,GAA8B,IAGhCR,EAAQM,MAAO,QACT5R,KAAKqI,UAAU9C,EACtB,CAEDvF,KAAKoE,KAAK,mBAAoB,CAAEkN,WACjC,EAEH0B,eAAeC,OAAO,UAAWpT"}